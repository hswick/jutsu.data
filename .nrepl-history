(csv-reader "data/iris.csv")
(csv-reader "iris.csv")
(def r (csv-reader "iris.csv"))
(clojure.reflect/reflect r)
(use 'clojure.reflect)
(reflect r)
(clojure.pprint/print-table (:members (reflect r)))
(.next r)
(.nextRecord r)
(clojure.pprint/print-table (:members (reflect (.nextRecord r))))
(.getRecord (.nextRecord r))
(.toString (.nextRecord r))
(.record (.nextRecord r))
(.getRecord (.nextRecord r))
(clojure.pprint/print-table (:members (reflect (.getRecord (.nextRecord r)))))
(.get (.getRecord (.nextRecord r)) 0)
(.get (.getRecord (.nextRecord r)) 1)
(.get (.getRecord (.nextRecord r)) 2)
(.get (.getRecord (.nextRecord r)) 3)
